{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsObject","map","good","index","name","id","App","useState","selectedGood","setSelectedGood","resetGoods","className","type","onClick","goodItem","isSelected","ReactDOM","render","document","getElementById"],"mappings":"2NAiBaA,EAbQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAICC,KAAI,SAACC,EAAMC,GAAP,MAAkB,CAAEC,KAAMF,EAAMG,GAAIF,MAE9BG,EAAM,WACjB,MAAwCC,mBAAS,OAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAIMC,EAAa,WACjBD,EAAgB,KAGlB,OACE,uBAAME,UAAU,oBAAhB,UACGH,EAEG,qBAAIG,UAAU,sCAAd,oBACMH,EADN,gBAGE,wBACE,UAAQ,cACRI,KAAK,SACLD,UAAU,cACVE,QAASH,OAMb,oBAAIC,UAAU,sCAAd,SAvBqB,sBA6BzB,uBAAOA,UAAU,QAAjB,SACE,gCACGX,EAAYC,KAAI,SAACa,GAChB,IACEV,EAEEU,EAFFV,KACAC,EACES,EADFT,GAGIU,EAAaP,IAAiBJ,EAUpC,OACE,qBACE,UAAQ,OAERO,UAAWI,EAAa,+BAAiC,GAH3D,UAKE,6BACE,wBACEH,KAAK,SACLD,UAAS,iBAAYI,EAAa,UAAY,IAC9C,UAASA,EAAa,eAAiB,YACvCF,QAnBc,WAChBE,EACFL,IAEAD,EAAgBL,IAWd,SAMGW,EAAa,IAAM,QAIxB,oBAAI,UAAQ,YAAYJ,UAAU,eAAlC,SACGP,MAfEC,cCtErBW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5dfc6a8f.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const goodsObject = goods\n  .map((good, index) => ({ name: good, id: index }));\n\nexport const App = () => {\n  const [selectedGood, setSelectedGood] = useState('Jam');\n\n  const EMPTY_FILTER_MESSAGE = 'No goods selected';\n\n  const resetGoods = () => {\n    setSelectedGood('');\n  };\n\n  return (\n    <main className=\"section container\">\n      {selectedGood\n        ? (\n          <h1 className=\"title is-flex is-align-items-center\">\n            {`${selectedGood} is selected`}\n\n            <button\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className=\"delete ml-3\"\n              onClick={resetGoods}\n            />\n          </h1>\n        )\n\n        : (\n          <h1 className=\"title is-flex is-align-items-center\">\n            {EMPTY_FILTER_MESSAGE}\n          </h1>\n        )\n      }\n\n      <table className=\"table\">\n        <tbody>\n          {goodsObject.map((goodItem) => {\n            const {\n              name,\n              id,\n            } = goodItem;\n\n            const isSelected = selectedGood === name;\n\n            const handleOnClick = () => {\n              if (isSelected) {\n                resetGoods();\n              } else {\n                setSelectedGood(name);\n              }\n            };\n\n            return (\n              <tr\n                data-cy=\"Good\"\n                key={id}\n                className={isSelected ? 'has-background-success-light' : ''}\n              >\n                <td>\n                  <button\n                    type=\"button\"\n                    className={`button ${isSelected ? 'is-info' : ''}`}\n                    data-cy={isSelected ? 'RemoveButton' : 'AddButton'}\n                    onClick={handleOnClick}\n                  >\n                    {isSelected ? '-' : '+'}\n                  </button>\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {name}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}